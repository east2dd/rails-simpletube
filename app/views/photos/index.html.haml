- content_for :sidebar do
  = render 'sidebar'
- content_for :search_box do
  .clearfix
    .pull-right
      = bootstrap_form_tag url: search_photos_path, method: :get, layout: :inline do |f|
        = f.text_field :search, hide_label: true, placeholder: 'Search photos'
        = f.button :search, class: 'btn btn-info hidden-xs' do
          %span.glyphicon.glyphicon-search
          Search
- content_for :before_content do
  #carousel.visible-sm.visible-md.visible-lg
    .slideshow{ :"data-cycle" => { fx: 'carousel', timeout: 3000, slides: '>a' } }
      - Photo.featured.take(8).to_a.shuffle.each do |photo|
        = link_to photo.file.url do
          = image_tag photo.file.thumb.url, title: photo.title, style: 'max-height: 340px;', alt: photo.title

#gallery
  #masonry-container.transitions-enabled.infinite-scroll.clearfix
    - @photos.each_with_index do |photo, index|
      .box.col-sm-3
        = render photo
.clearfix
  .pull-right
    = paginate @photos

:javascript
  $(function(){
    $('#gallery').photobox('a.img-photo',{ time: 0, loop: false });
    $('#carousel').photobox('a',{ time: 0, loop: false });

    var $container = $('#masonry-container');

    $container.imagesLoaded( function() {
      $container.masonry({
        itemSelector: '.box',
        columnWidth: function( containerWidth ) {
          return containerWidth / 4;
        }
      });  
    });

    $container.infinitescroll({
      navSelector  : 'nav.pagination',    // selector for the paged navigation
      nextSelector : 'nav.pagination a[rel=next]',  // selector for the NEXT link (to page 2)
      itemSelector : '.box',     // selector for all items you'll retrieve
      loading: {
          finishedMsg: 'No more pages to load.',
          img: 'http://i.imgur.com/6RMhx.gif'
        }
      },
      // trigger Masonry as a callback
      function( newElements ) {
        // hide new items while they are loading
        var $newElems = $( newElements ).css({ opacity: 0 });
        // ensure that images load before adding to masonry layout
        $newElems.imagesLoaded(function(){
          // show elems now they're ready
          $newElems.animate({ opacity: 1 });
          $container.masonry( 'appended', $newElems, true );
        });
      }
    );

  });

