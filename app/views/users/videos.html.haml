- content_for :sidebar do
  = render 'sidebar'
- content_for :search_box do
  %h3.page-title
    = "videos: #{@user.full_name}"


- content_for :before_content do
  #carousel.visible-sm.visible-md.visible-lg
    .slideshow{ :"data-cycle" => { fx: 'carousel', timeout: 3000, slides: '>a' } }
      - Video.featured.take(12).to_a.shuffle.each do |video|
        = link_to video_path(video) do
          = image_tag video.thumbnail.thumb.url, title: video.title
          %span.subtitle
            = truncate(video.title, :omission => "...", :length => 12)
.clearfix
  - if @title
    %h4
      = @title
  - if @category
    %h4
      %span.glyphicon.glyphicon-folder-open
      &nbsp;
      =@category.name

  - if @tag
    %h4
      %span.glyphicon.glyphicon-tags
      &nbsp;
      = @tag
  - if params[:search]
    %h4
      %span.glyphicon.glyphicon-search
      &nbsp;
      = params[:search]


- if @videos.count > 0
  #gallery
    #masonry-container.transitions-enabled.infinite-scroll.clearfix
      .row
        - @videos.each do |video|
          .box.col-sm-3
            = render video
  .clearfix
    = paginate @videos
- else
  .row
    .alert.alert-warning
      Sorry, There is no matched videos.

:javascript
  $(function(){
    $('#gallery').photobox('a.video',{ time:1000, zoomable: false, loop: false});
    var $container = $('#masonry-container');

    $container.imagesLoaded( function() {
      $container.masonry({
        itemSelector: '.box',
        columnWidth: function( containerWidth ) {
          return containerWidth / 4;
        }
      });  
    });

    $container.infinitescroll({
      navSelector  : 'nav.pagination',    // selector for the paged navigation
      nextSelector : 'nav.pagination a[rel=next]',  // selector for the NEXT link (to page 2)
      itemSelector : '.box',     // selector for all items you'll retrieve
      loading: {
          finishedMsg: 'No more pages to load.',
          img: 'http://i.imgur.com/6RMhx.gif'
        }
      },
      // trigger Masonry as a callback
      function( newElements ) {
        // hide new items while they are loading
        var $newElems = $( newElements ).css({ opacity: 0 });
        // ensure that images load before adding to masonry layout
        $newElems.imagesLoaded(function(){
          // show elems now they're ready
          $newElems.animate({ opacity: 1 });
          $container.masonry( 'appended', $newElems, true );
        });
      });
  });
  